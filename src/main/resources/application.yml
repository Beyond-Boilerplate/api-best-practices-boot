spring:
  application:
    name: api-best-practices-boot
  output:
    ansi:
      enabled: ALWAYS
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password:
  h2:
    console:
      enabled: true
  jpa:
    hibernate:
      ddl-auto: update
  data:
    redis:
      host: localhost
      port: 6379
      timeout: 60000
    web:
      pageable:
        default-page-size: 10
        max-page-size: 100
        sort: amount,desc
  cache:
    type: redis

management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus
  endpoint:
    health:
      show-details: always  # Always show detailed health information in the response
      probes:
        enabled: true
  metrics:
    enable:
      all: true
    distribution:
      percentiles-histogram:
        http.server.requests: true  # Enable histograms for HTTP server requests
      percentiles:
        http.server.requests: [ 0.5, 0.95, 0.99 ]  # Enable 50th, 95th, and 99th percentiles for request duration
  prometheus:
    metrics:
      export:
        enabled: true
  tracing:
    sampling:
      probability: 1.0

# Custom properties for idempotency settings
idempotency:
  lock-expiration: 5 # In seconds
  cache-expiration: 3600 # 1 hour in seconds

logging:
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %highlight(%-5level){INFO=green, WARN=yellow, ERROR=red} [%clr(%X{traceId:-}){cyan}, %clr(%X{spanId:-}){green}, %clr(%X{correlationId:-}){blue}] [%clr(%X{httpMethod:-}){POST=magenta, GET=yellow, PUT=red} %X{requestURL:-}] [%logger{36}] - %msg%n"

app:
  rate:
    limit: 20
    durationinms: 60000